generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  typeUser  UserType
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Distrito {
  id    Int     @id @default(autoincrement())
  name  String
  rutas Rutas[]
}

model Rutas {
  id         Int       @id @default(autoincrement())
  name       String
  distritoId Int
  distrito   Distrito  @relation(fields: [distritoId], references: [id])
  Cliente    Cliente[]
}

model Product {
  id           Int     @id @default(autoincrement())
  name         String
  litros       String
  isReturnable Boolean
  botlePrice   Decimal
  contentPrice Decimal
  venta        Venta[]
}

model Venta {
  id        Int      @id @default(autoincrement())
  productId Int
  price     Decimal
  date      DateTime
  product   Product  @relation(fields: [productId], references: [id])
}

enum UserType {
  admin
  carrier
  assistant
}

model Cliente {
  id                 Int      @id @default(autoincrement())
  nombres            String
  apellidos          String
  fechaCumple        DateTime
  telefono           String
  direccion          String
  modeloNegocio      String
  coordenadaX        Decimal
  coordenadaY        Decimal
  rutaId             Int
  ruta               Rutas    @relation(fields: [rutaId], references: [id])
  visitas            Visita[]
  isActive           Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  pedidoConcurrencia Int      @default(0)
}

model Visita {
  id            Int      @id @default(autoincrement())
  fechaVisita   DateTime
  clienteId     Int
  cliente       Cliente  @relation(fields: [clienteId], references: [id])
  observaciones String?
  createdAt     DateTime @default(now())
}
